user www-data;
worker_processes 5;

error_log /dev/stdout info;
pid       /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Custom log format
    log_format main '$http_x_forwarded_for ($remote_addr) - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent "$http_referer" '
        '"$http_user_agent"' ;

    access_log /dev/stdout main;

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    types {
        font/woff2 woff2;
    }
    client_max_body_size 50M;

    ##
    # Virtual Host Configs
    ##
    server {
        listen 80;
        listen 443 ssl;
        server_name _;

        root /app/web;
        index index.php;

        ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
        ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;

        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        # Very rarely should these ever be accessed outside of your lan
        location ~* \.(txt|log)$ {
            allow 192.168.0.0/16;
            deny all;
        }

        # Allow "Well-Known URIs" as per RFC 5785
        location ~* ^/.well-known/ {
            allow all;
        }

        # Block access to "hidden" files.
        location ~ (^|/)\. {
            return 403;
        }

        # Don't allow direct access to PHP files in the vendor directory.
        location ~ /vendor/.*\.php$ {
            deny all;
            return 404;
        }

        # PHP file handling.
        location / {
			try_files $uri /index.php?$query_string;
		}

		location @rewrite {
			rewrite ^/(.*)$ /index.php?q=$1;
		}

        location ~ '\.php$' {
            fastcgi_split_path_info ^(.+?\.php)(|/.*)$;

            # Security note: If you're running a version of PHP older than the
            # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
            # See http://serverfault.com/q/627903/94922 for details.
            include fastcgi_params;

            # Block httpoxy attacks. See https://httpoxy.org/.
            fastcgi_param HTTP_PROXY "";
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param QUERY_STRING $query_string;
            fastcgi_param HTTPS on;
            fastcgi_intercept_errors on;
            fastcgi_read_timeout 10m;
            fastcgi_pass bci_web:9000;

            fastcgi_buffers 128 4096k;
            fastcgi_buffer_size 4096k;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            try_files $uri @rewrite;
            expires max;
            log_not_found off;
        }
    }
}
